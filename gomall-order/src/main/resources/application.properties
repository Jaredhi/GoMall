# RabbitMQ配置
spring.rabbitmq.host=192.168.108.131
spring.rabbitmq.port=5672
# 虚拟主机配置
spring.rabbitmq.virtual-host=/
# 开启发送端消息抵达Broker确认
spring.rabbitmq.publisher-confirms=true
# 开启发送端消息抵达Queue确认
spring.rabbitmq.publisher-returns=true
# 只要消息抵达Queue，就会异步发送优先回调returnfirm
spring.rabbitmq.template.mandatory=true
# 手动ack消息，不使用默认的消费端确认
spring.rabbitmq.listener.simple.acknowledge-mode=manual


spring.thymeleaf.cache=false

# 设置sprng session使用Redis存储
spring.session.store-type=redis

gomall.thread.core-size=20
gomall.thread.max-size=200
gomall.thread.keep-alive-time=10

spring.mvc.date-format=yyyy-MM-dd HH:mm:ss
# TODO
# 支付宝支付配置
# 在支付宝创建的应用的id
alipay.app_id=

# 商户私钥，您的PKCS8格式RSA2私钥
alipay.merchant-private-key=
# 支付宝公钥,查看地址：https://openhome.alipay.com/platform/keyManage.htm 对应APPID下的支付宝公钥。
alipay.alipay-public-key=

# 服务器[异步通知]页面路径  需http://格式的完整路径，不能加?id=123这类自定义参数，必须外网可以正常访问
# 支付宝会悄悄的给我们发送一个请求，告诉我们支付成功的信息
alipay.notify_url=http://oytcfo4fj4.54http.tech/payed/notify
# TODO

# 页面跳转同步通知页面路径 需http://格式的完整路径，不能加?id=123这类自定义参数，必须外网可以正常访问
# 同步通知，支付成功，一般跳转到成功页
alipay.return_url=http://member.gomall.com/memberOrder.html

# 签名方式
alipay.sign_type=RSA2

# 字符编码格式
alipay.charset=utf-8

# 支付宝网关
alipay.gatewayUrl=https://openapi.alipaydev.com/gateway.do

alipay.timeout_express=30m
#
#spring.cloud.sentinel.transport.dashboard=localhost:8333
#
#management.endpoints.web.exposure.include=*
#
#feign.sentinel.enabled=true

# zipkin 配置
#spring.zipkin.base-url=http://192.168.56.10:9411/
#spring.zipkin.discovery-client-enabled=false
#spring.zipkin.sender.type=web
#spring.sleuth.sampler.probability=1
